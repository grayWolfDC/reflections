What happens when you initialize a repository? Why do you need to do it?
	Initialized empty Git repository in /Users/PoFA/Workspace/Copepod-IBM/.git/

How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The staging area allows me to choose what to commit next. As such it is subjective.
	But then again that's how I like it to be, because it has to reflect how my perception
	of progression.

How can you use the staging area to make sure you have one commit per logical
change?

	use add to put the desired file on the repository make sure the differences justify a commit,
	the commit the file

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    
    Branches are useful in a situation where some testing is required, while avoiding to break
    a working copy is adviseable. 

How do the diagrams help you visualize the branch structure?
    
    It helps to see at what point branches were created and merge, and to identify parental
    relationships between commits, which may not be obvious on calling git log following a branch merging.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Merging two branches together merges changes in the files involved. Conflict may arise and 
    are indicated within the files at the appropriate locations. Also, commits from different branches are 
    put on a single timeline, by time of commitment. This may muddle parental relationships and using the 
    diagram helps teasing these out.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

    automatic merging saves time, but can lead to spurrious results without some human oversight.
    always doing merges manually would insure merging consistency everytime but would be time consuming
